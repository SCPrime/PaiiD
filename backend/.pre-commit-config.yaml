# ====================================
# PAIID BACKEND PRE-COMMIT CONFIGURATION
# ====================================
# Python code quality checks for FastAPI backend
#
# Installation:
#   cd backend
#   pip install pre-commit
#   pre-commit install
#
# Manual run:
#   pre-commit run --all-files
#
# Bypass:
#   SKIP_HOOKS=1 git commit -m "message"
#   git commit --no-verify -m "message"

repos:
  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 24.8.0
    hooks:
      - id: black
        name: Format Python code (Black)
        args: [--line-length=100, --target-version=py312]
        files: ^backend/.*\.py$
        exclude: ^backend/(\.venv|venv|__pycache__|\.pytest_cache|alembic/versions)/

  # Python linting with Ruff (faster alternative to Flake8, isort, etc.)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.0
    hooks:
      - id: ruff
        name: Lint Python code (Ruff)
        args: [--fix, --exit-non-zero-on-fix, --config=pyproject.toml]
        files: ^backend/.*\.py$
        exclude: ^backend/(\.venv|venv|__pycache__|\.pytest_cache|alembic/versions)/

      - id: ruff-format
        name: Format Python code (Ruff formatter)
        files: ^backend/.*\.py$
        exclude: ^backend/(\.venv|venv|__pycache__|\.pytest_cache|alembic/versions)/

  # Import sorting (if not using Ruff for this)
  # Commented out because Ruff handles import sorting
  # - repo: https://github.com/PyCQA/isort
  #   rev: 5.13.2
  #   hooks:
  #     - id: isort
  #       args: [--profile=black, --line-length=100]
  #       files: ^backend/.*\.py$

  # General file quality checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        name: Remove trailing whitespace
        files: ^backend/
        exclude: ^backend/(\.venv|venv|__pycache__|\.pytest_cache)/

      - id: end-of-file-fixer
        name: Ensure files end with newline
        files: ^backend/
        exclude: ^backend/(\.venv|venv|__pycache__|\.pytest_cache)/

      - id: check-yaml
        name: Validate YAML syntax
        files: ^backend/.*\.ya?ml$

      - id: check-json
        name: Validate JSON syntax
        files: ^backend/.*\.json$

      - id: check-toml
        name: Validate TOML syntax
        files: ^backend/.*\.toml$

      - id: check-added-large-files
        name: Check for large files (>500KB)
        args: [--maxkb=500]
        files: ^backend/

      - id: check-merge-conflict
        name: Check for merge conflict markers
        files: ^backend/

      - id: debug-statements
        name: Check for debugger statements
        files: ^backend/.*\.py$

  # Python syntax validation
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
        name: Check for blanket # noqa
        files: ^backend/.*\.py$

      - id: python-check-blanket-type-ignore
        name: Check for blanket # type: ignore
        files: ^backend/.*\.py$

      - id: python-no-eval
        name: Check for eval() usage
        files: ^backend/.*\.py$

      - id: python-no-log-warn
        name: Check for deprecated .warn() on loggers
        files: ^backend/.*\.py$

# ====================================
# OPTIONAL: Contract Tests Hook
# ====================================
# Uncomment to run contract tests on every commit
# WARNING: This will slow down commits significantly
#
# - repo: local
#   hooks:
#     - id: pytest-contract
#       name: Run contract tests
#       entry: bash -c 'cd backend && python -m pytest tests/contract/ -v --tb=short'
#       language: system
#       pass_filenames: false
#       stages: [commit]
#       files: ^backend/tests/contract/

# ====================================
# OPTIONAL: Type Checking with mypy
# ====================================
# Uncomment to enable strict type checking
# WARNING: This requires type hints and may need configuration
#
# - repo: https://github.com/pre-commit/mirrors-mypy
#   rev: v1.11.0
#   hooks:
#     - id: mypy
#       name: Type check Python code (mypy)
#       files: ^backend/app/.*\.py$
#       args: [--ignore-missing-imports, --no-strict-optional]
#       additional_dependencies: [types-all]

# Configuration
default_language_version:
  python: python3.12

# Performance: Only run on changed files by default
default_stages: [commit]

# Fail fast: Stop on first failure
fail_fast: false

# Minimum pre-commit version
minimum_pre_commit_version: 3.0.0
