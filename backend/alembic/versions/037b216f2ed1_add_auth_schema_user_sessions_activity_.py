"""add_auth_schema_user_sessions_activity_log

Revision ID: 037b216f2ed1
Revises: c8e4f9b52d31
Create Date: 2025-10-15 22:11:24.035448

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '037b216f2ed1'
down_revision: Union[str, Sequence[str], None] = 'c8e4f9b52d31'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activity_log_action_type'), 'activity_log', ['action_type'], unique=False)
    op.create_index(op.f('ix_activity_log_id'), 'activity_log', ['id'], unique=False)
    op.create_index(op.f('ix_activity_log_resource_type'), 'activity_log', ['resource_type'], unique=False)
    op.create_index(op.f('ix_activity_log_timestamp'), 'activity_log', ['timestamp'], unique=False)
    op.create_index(op.f('ix_activity_log_user_id'), 'activity_log', ['user_id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_token_jti', sa.String(length=100), nullable=False),
    sa.Column('refresh_token_jti', sa.String(length=100), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_sessions_access_token_jti'), 'user_sessions', ['access_token_jti'], unique=True)
    op.create_index(op.f('ix_user_sessions_expires_at'), 'user_sessions', ['expires_at'], unique=False)
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_user_sessions_refresh_token_jti'), 'user_sessions', ['refresh_token_jti'], unique=True)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)

    # Add new columns as nullable first to handle existing rows
    op.add_column('users', sa.Column('password_hash', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('full_name', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('role', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('last_login_at', sa.DateTime(), nullable=True))

    # Update existing rows with default values
    # password_hash: bcrypt hash of 'changeme123' for legacy users
    # role: 'personal_only' (after owner is manually upgraded)
    # is_active: true
    op.execute("""
        UPDATE users
        SET password_hash = '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewY5GyYJ3H6rVfJK',
            role = 'personal_only',
            is_active = true,
            full_name = email
        WHERE password_hash IS NULL
    """)

    # Now make password_hash, role, and is_active NOT NULL
    op.alter_column('users', 'password_hash',
               existing_type=sa.String(length=255),
               nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.String(length=50),
               nullable=False,
               server_default='personal_only')
    op.alter_column('users', 'is_active',
               existing_type=sa.Boolean(),
               nullable=False,
               server_default=sa.text('true'))

    # Make email required
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)

    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('users', 'last_login_at')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'role')
    op.drop_column('users', 'full_name')
    op.drop_column('users', 'password_hash')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_refresh_token_jti'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_expires_at'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_access_token_jti'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_activity_log_user_id'), table_name='activity_log')
    op.drop_index(op.f('ix_activity_log_timestamp'), table_name='activity_log')
    op.drop_index(op.f('ix_activity_log_resource_type'), table_name='activity_log')
    op.drop_index(op.f('ix_activity_log_id'), table_name='activity_log')
    op.drop_index(op.f('ix_activity_log_action_type'), table_name='activity_log')
    op.drop_table('activity_log')
    # ### end Alembic commands ###
