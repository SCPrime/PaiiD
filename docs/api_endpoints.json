{
  "generated_at": "2025-10-27",
  "total_routers": 24,
  "total_endpoints": 120,
  "routers": [
    {
      "file": "ai.py",
      "prefix": "/ai",
      "tags": [
        "ai"
      ],
      "endpoints": [
        {
          "method": "GET",
          "path": "/recommendations",
          "full_path": "/ai/recommendations",
          "function": "get_recommendations",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/recommendations/{symbol}",
          "full_path": "/ai/recommendations/{symbol}",
          "function": "get_symbol_recommendation",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/recommended-templates",
          "full_path": "/ai/recommended-templates",
          "function": "get_recommended_templates",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/recommendations/save",
          "full_path": "/ai/recommendations/save",
          "function": "save_recommendation",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/analyze-portfolio",
          "full_path": "/ai/analyze-portfolio",
          "function": "analyze_portfolio",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/analyze-news",
          "full_path": "/ai/analyze-news",
          "function": "analyze_news",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/analyze-news-batch",
          "full_path": "/ai/analyze-news-batch",
          "function": "analyze_news_batch",
          "description": ""
        }
      ]
    },
    {
      "file": "analytics.py",
      "prefix": "",
      "tags": [
        "analytics"
      ],
      "endpoints": [
        {
          "method": "GET",
          "path": "/portfolio/summary",
          "full_path": "/portfolio/summary",
          "function": "unknown",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/portfolio/history",
          "full_path": "/portfolio/history",
          "function": "unknown",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/analytics/performance",
          "full_path": "/analytics/performance",
          "function": "unknown",
          "description": ""
        }
      ]
    },
    {
      "file": "auth.py",
      "prefix": "",
      "tags": [
        "auth"
      ],
      "endpoints": [
        {
          "method": "POST",
          "path": "/auth/login",
          "full_path": "/auth/login",
          "function": "login",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/auth/logout",
          "full_path": "/auth/logout",
          "function": "logout",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/auth/refresh",
          "full_path": "/auth/refresh",
          "function": "refresh_token",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/auth/me",
          "full_path": "/auth/me",
          "function": "get_current_user_profile",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/auth/csrf-token",
          "full_path": "/auth/csrf-token",
          "function": "get_csrf_token",
          "description": ""
        }
      ]
    },
    {
      "file": "backtesting.py",
      "prefix": "/backtesting",
      "tags": [
        "backtesting"
      ],
      "endpoints": [
        {
          "method": "POST",
          "path": "/run",
          "full_path": "/backtesting/run",
          "function": "unknown",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/quick-test",
          "full_path": "/backtesting/quick-test",
          "function": "get_strategy_templates",
          "description": "Get pre-built strategy templates for backtesting"
        },
        {
          "method": "GET",
          "path": "/strategy-templates",
          "full_path": "/backtesting/strategy-templates",
          "function": "get_strategy_templates",
          "description": "Get pre-built strategy templates for backtesting"
        }
      ]
    },
    {
      "file": "claude.py",
      "prefix": "/claude",
      "tags": [
        "claude"
      ],
      "endpoints": [
        {
          "method": "POST",
          "path": "/chat",
          "full_path": "/claude/chat",
          "function": "claude_chat",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/health",
          "full_path": "/claude/health",
          "function": "claude_health",
          "description": "Check if Claude API is configured and accessible"
        }
      ]
    },
    {
      "file": "health.py",
      "prefix": "/health",
      "tags": [
        "health"
      ],
      "endpoints": [
        {
          "method": "GET",
          "path": "/detailed",
          "full_path": "/health/detailed",
          "function": "detailed_health_check",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/startup",
          "full_path": "/health/startup",
          "function": "startup_health_check",
          "description": "Startup health check - returns validation results."
        },
        {
          "method": "GET",
          "path": "/readiness",
          "full_path": "/health/readiness",
          "function": "readiness_check",
          "description": "Kubernetes-style readiness check."
        },
        {
          "method": "GET",
          "path": "/liveness",
          "full_path": "/health/liveness",
          "function": "liveness_check",
          "description": "Kubernetes-style liveness probe"
        },
        {
          "method": "GET",
          "path": "/ready",
          "full_path": "/health/ready",
          "function": "ready_check",
          "description": "Kubernetes-style readiness probe - alias for readiness"
        },
        {
          "method": "GET",
          "path": "/ready/full",
          "full_path": "/health/ready/full",
          "function": "ready_full_check",
          "description": "Comprehensive readiness probe: DB, Redis, streaming, AI proxy."
        },
        {
          "method": "GET",
          "path": "/features",
          "full_path": "/health/features",
          "function": "features_status",
          "description": "Feature availability status from readiness registry."
        },
        {
          "method": "GET",
          "path": "/sentry-test",
          "full_path": "/health/sentry-test",
          "function": "sentry_test",
          "description": "Test endpoint that raises an exception for Sentry testing"
        }
      ]
    },
    {
      "file": "market.py",
      "prefix": "",
      "tags": [
        "market"
      ],
      "endpoints": [
        {
          "method": "GET",
          "path": "/market/conditions",
          "full_path": "/market/conditions",
          "function": "get_market_conditions",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/market/indices",
          "full_path": "/market/indices",
          "function": "get_major_indices",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/market/sectors",
          "full_path": "/market/sectors",
          "function": "get_sector_performance",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/market/status",
          "full_path": "/market/status",
          "function": "get_market_status",
          "description": ""
        }
      ]
    },
    {
      "file": "market_data.py",
      "prefix": "",
      "tags": [],
      "endpoints": [
        {
          "method": "GET",
          "path": "/market/quote/{symbol}",
          "full_path": "/market/quote/{symbol}",
          "function": "get_quote",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/market/quotes",
          "full_path": "/market/quotes",
          "function": "get_quotes",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/market/bars/{symbol}",
          "full_path": "/market/bars/{symbol}",
          "function": "get_bars",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/market/scanner/under4",
          "full_path": "/market/scanner/under4",
          "function": "scan_under_4",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/market/cache/stats",
          "full_path": "/market/cache/stats",
          "function": "get_cache_stats",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/market/historical",
          "full_path": "/market/historical",
          "function": "get_historical_data",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/market/cache/clear",
          "full_path": "/market/cache/clear",
          "function": "clear_market_cache",
          "description": ""
        }
      ]
    },
    {
      "file": "ml.py",
      "prefix": "/api/ml",
      "tags": [
        "Machine Learning"
      ],
      "endpoints": [
        {
          "method": "GET",
          "path": "/market-regime",
          "full_path": "/api/ml/market-regime",
          "function": "get_market_regime",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/train-regime-detector",
          "full_path": "/api/ml/train-regime-detector",
          "function": "train_regime_detector",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/health",
          "full_path": "/api/ml/health",
          "function": "ml_health_check",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/recommend-strategy",
          "full_path": "/api/ml/recommend-strategy",
          "function": "recommend_strategy",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/train-strategy-selector",
          "full_path": "/api/ml/train-strategy-selector",
          "function": "train_strategy_selector",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/detect-patterns",
          "full_path": "/api/ml/detect-patterns",
          "function": "detect_patterns",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/backtest-patterns",
          "full_path": "/api/ml/backtest-patterns",
          "function": "backtest_patterns",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/models/status",
          "full_path": "/api/ml/models/status",
          "function": "get_models_status",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/models/{model_id}/retrain",
          "full_path": "/api/ml/models/{model_id}/retrain",
          "function": "retrain_model",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/models/auto-retrain",
          "full_path": "/api/ml/models/auto-retrain",
          "function": "toggle_auto_retrain",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/optimize-portfolio",
          "full_path": "/api/ml/optimize-portfolio",
          "function": "optimize_portfolio",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/analytics",
          "full_path": "/api/ml/analytics",
          "function": "get_ml_analytics",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/ensemble-prediction",
          "full_path": "/api/ml/ensemble-prediction",
          "function": "get_ensemble_prediction",
          "description": ""
        }
      ]
    },
    {
      "file": "ml_sentiment.py",
      "prefix": "/api/sentiment",
      "tags": [
        "ML Sentiment & Signals"
      ],
      "endpoints": [
        {
          "method": "GET",
          "path": "/sentiment/{symbol}",
          "full_path": "/api/sentiment/sentiment/{symbol}",
          "function": "get_sentiment",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/signals/{symbol}",
          "full_path": "/api/sentiment/signals/{symbol}",
          "function": "get_trade_signal",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/signals/batch",
          "full_path": "/api/sentiment/signals/batch",
          "function": "get_batch_signals",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/health",
          "full_path": "/api/sentiment/health",
          "function": "ml_sentiment_health_check",
          "description": "Check ML sentiment service health"
        },
        {
          "method": "GET",
          "path": "/analyze",
          "full_path": "/api/sentiment/analyze",
          "function": "analyze_sentiment",
          "description": ""
        }
      ]
    },
    {
      "file": "news.py",
      "prefix": "",
      "tags": [],
      "endpoints": [
        {
          "method": "GET",
          "path": "/news/company/{symbol}",
          "full_path": "/news/company/{symbol}",
          "function": "get_company_news",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/news/market",
          "full_path": "/news/market",
          "function": "get_market_news",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/news/providers",
          "full_path": "/news/providers",
          "function": "get_news_providers",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/news/health",
          "full_path": "/news/health",
          "function": "get_news_health",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/news/sentiment/market",
          "full_path": "/news/sentiment/market",
          "function": "get_market_sentiment",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/news/cache/stats",
          "full_path": "/news/cache/stats",
          "function": "get_cache_stats",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/news/cache/clear",
          "full_path": "/news/cache/clear",
          "function": "clear_news_cache",
          "description": ""
        }
      ]
    },
    {
      "file": "options.py",
      "prefix": "/options",
      "tags": [
        "options"
      ],
      "endpoints": [
        {
          "method": "GET",
          "path": "/expirations/{symbol}",
          "full_path": "/options/expirations/{symbol}",
          "function": "get_expiration_dates",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/greeks",
          "full_path": "/options/greeks",
          "function": "calculate_greeks",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/contract/{option_symbol}",
          "full_path": "/options/contract/{option_symbol}",
          "function": "get_option_contract",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/cache/clear",
          "full_path": "/options/cache/clear",
          "function": "clear_options_cache",
          "description": ""
        }
      ]
    },
    {
      "file": "orders.py",
      "prefix": "",
      "tags": [],
      "endpoints": [
        {
          "method": "POST",
          "path": "/trading/execute",
          "full_path": "/trading/execute",
          "function": "execute",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/admin/kill",
          "full_path": "/admin/kill",
          "function": "kill",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/order-templates",
          "full_path": "/order-templates",
          "function": "list_order_templates",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/order-templates/{template_id}",
          "full_path": "/order-templates/{template_id}",
          "function": "get_order_template",
          "description": ""
        },
        {
          "method": "PUT",
          "path": "/order-templates/{template_id}",
          "full_path": "/order-templates/{template_id}",
          "function": "update_order_template",
          "description": ""
        },
        {
          "method": "DELETE",
          "path": "/order-templates/{template_id}",
          "full_path": "/order-templates/{template_id}",
          "function": "delete_order_template",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/order-templates/{template_id}/use",
          "full_path": "/order-templates/{template_id}/use",
          "function": "use_order_template",
          "description": ""
        }
      ]
    },
    {
      "file": "portfolio.py",
      "prefix": "",
      "tags": [],
      "endpoints": [
        {
          "method": "GET",
          "path": "/account",
          "full_path": "/account",
          "function": "get_account",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/positions",
          "full_path": "/positions",
          "function": "get_positions",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/positions/{symbol}",
          "full_path": "/positions/{symbol}",
          "function": "get_position",
          "description": ""
        }
      ]
    },
    {
      "file": "positions.py",
      "prefix": "/api/positions",
      "tags": [
        "positions"
      ],
      "endpoints": [
        {
          "method": "GET",
          "path": "/greeks",
          "full_path": "/api/positions/greeks",
          "function": "get_portfolio_greeks",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/{position_id}/close",
          "full_path": "/api/positions/{position_id}/close",
          "function": "close_position",
          "description": ""
        }
      ]
    },
    {
      "file": "proposals.py",
      "prefix": "/api/proposals",
      "tags": [
        "proposals"
      ],
      "endpoints": [
        {
          "method": "POST",
          "path": "/create",
          "full_path": "/api/proposals/create",
          "function": "create_proposal",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/execute",
          "full_path": "/api/proposals/execute",
          "function": "execute_proposal",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/history",
          "full_path": "/api/proposals/history",
          "function": "get_proposal_history",
          "description": ""
        }
      ]
    },
    {
      "file": "scheduler.py",
      "prefix": "/scheduler",
      "tags": [
        "scheduler"
      ],
      "endpoints": [
        {
          "method": "GET",
          "path": "/schedules",
          "full_path": "/scheduler/schedules",
          "function": "list_schedules",
          "description": ""
        },
        {
          "method": "PATCH",
          "path": "/schedules/{schedule_id}",
          "full_path": "/scheduler/schedules/{schedule_id}",
          "function": "update_schedule",
          "description": ""
        },
        {
          "method": "DELETE",
          "path": "/schedules/{schedule_id}",
          "full_path": "/scheduler/schedules/{schedule_id}",
          "function": "delete_schedule",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/pause-all",
          "full_path": "/scheduler/pause-all",
          "function": "pause_all_schedules",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/resume-all",
          "full_path": "/scheduler/resume-all",
          "function": "resume_all_schedules",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/executions",
          "full_path": "/scheduler/executions",
          "function": "list_executions",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/pending-approvals",
          "full_path": "/scheduler/pending-approvals",
          "function": "list_pending_approvals",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/approvals/{approval_id}/approve",
          "full_path": "/scheduler/approvals/{approval_id}/approve",
          "function": "approve_trade",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/approvals/{approval_id}/reject",
          "full_path": "/scheduler/approvals/{approval_id}/reject",
          "function": "reject_trade",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/status",
          "full_path": "/scheduler/status",
          "function": "scheduler_status",
          "description": ""
        }
      ]
    },
    {
      "file": "screening.py",
      "prefix": "",
      "tags": [
        "screening"
      ],
      "endpoints": [
        {
          "method": "GET",
          "path": "/screening/opportunities",
          "full_path": "/screening/opportunities",
          "function": "get_opportunities",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/screening/strategies",
          "full_path": "/screening/strategies",
          "function": "get_available_strategies",
          "description": ""
        }
      ]
    },
    {
      "file": "settings.py",
      "prefix": "",
      "tags": [],
      "endpoints": [
        {
          "method": "GET",
          "path": "/settings",
          "full_path": "/settings",
          "function": "get_settings",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/settings",
          "full_path": "/settings",
          "function": "set_settings",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/config",
          "full_path": "/config",
          "function": "get_config",
          "description": ""
        }
      ]
    },
    {
      "file": "stock.py",
      "prefix": "/stock",
      "tags": [
        "stock"
      ],
      "endpoints": [
        {
          "method": "GET",
          "path": "/{symbol}/info",
          "full_path": "/stock/{symbol}/info",
          "function": "get_stock_info",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/{symbol}/news",
          "full_path": "/stock/{symbol}/news",
          "function": "get_stock_news",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/{symbol}/complete",
          "full_path": "/stock/{symbol}/complete",
          "function": "get_complete_stock_info",
          "description": ""
        }
      ]
    },
    {
      "file": "strategies.py",
      "prefix": "",
      "tags": [],
      "endpoints": [
        {
          "method": "POST",
          "path": "/strategies/save",
          "full_path": "/strategies/save",
          "function": "save_strategy",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/strategies/load/{strategy_type}",
          "full_path": "/strategies/load/{strategy_type}",
          "function": "load_strategy",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/strategies/list",
          "full_path": "/strategies/list",
          "function": "list_strategies",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/strategies/run",
          "full_path": "/strategies/run",
          "function": "run_strategy",
          "description": ""
        },
        {
          "method": "DELETE",
          "path": "/strategies/{strategy_type}",
          "full_path": "/strategies/{strategy_type}",
          "function": "delete_strategy",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/strategies/templates",
          "full_path": "/strategies/templates",
          "function": "get_strategy_templates",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/strategies/templates/{template_id}",
          "full_path": "/strategies/templates/{template_id}",
          "function": "get_strategy_template",
          "description": ""
        },
        {
          "method": "POST",
          "path": "/strategies/templates/{template_id}/clone",
          "full_path": "/strategies/templates/{template_id}/clone",
          "function": "clone_strategy_template",
          "description": ""
        }
      ]
    },
    {
      "file": "stream.py",
      "prefix": "",
      "tags": [
        "streaming"
      ],
      "endpoints": [
        {
          "method": "GET",
          "path": "/stream/prices",
          "full_path": "/stream/prices",
          "function": "stream_prices",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/stream/positions",
          "full_path": "/stream/positions",
          "function": "stream_positions",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/stream/market-indices",
          "full_path": "/stream/market-indices",
          "function": "stream_market_indices",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/stream/status",
          "full_path": "/stream/status",
          "function": "stream_status",
          "description": ""
        }
      ]
    },
    {
      "file": "telemetry.py",
      "prefix": "/telemetry",
      "tags": [
        "telemetry"
      ],
      "endpoints": [
        {
          "method": "GET",
          "path": "/events",
          "full_path": "/telemetry/events",
          "function": "get_telemetry_events",
          "description": "Retrieve telemetry events with optional filters"
        },
        {
          "method": "GET",
          "path": "/stats",
          "full_path": "/telemetry/stats",
          "function": "get_telemetry_stats",
          "description": "Get aggregate statistics from telemetry data"
        },
        {
          "method": "DELETE",
          "path": "/events",
          "full_path": "/telemetry/events",
          "function": "clear_telemetry_events",
          "description": "Clear all telemetry events (admin only)"
        },
        {
          "method": "GET",
          "path": "/export",
          "full_path": "/telemetry/export",
          "function": "export_telemetry",
          "description": "Export all telemetry events as JSON"
        }
      ]
    },
    {
      "file": "users.py",
      "prefix": "",
      "tags": [],
      "endpoints": [
        {
          "method": "GET",
          "path": "/users/preferences",
          "full_path": "/users/preferences",
          "function": "get_user_preferences",
          "description": ""
        },
        {
          "method": "PATCH",
          "path": "/users/preferences",
          "full_path": "/users/preferences",
          "function": "update_user_preferences",
          "description": ""
        },
        {
          "method": "GET",
          "path": "/users/risk-limits",
          "full_path": "/users/risk-limits",
          "function": "get_user_risk_limits",
          "description": ""
        }
      ]
    }
  ]
}