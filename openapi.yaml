openapi: 3.0.3
info:
  title: PaiiD Trading Platform API
  description: |
    Personal Artificial Intelligence Investment Dashboard - AI-powered trading platform with real-time market data, 
    intelligent trade execution, and a 10-stage radial workflow interface.
    
    **Features:**
    - Real-time portfolio tracking
    - Paper trading execution via Alpaca API
    - Live market data via Tradier API
    - AI-powered recommendations
    - Multi-stage workflow management
    
    **Authentication:** All endpoints require Bearer token authentication.
  version: 1.0.0
  contact:
    name: PaiiD API Support
    url: https://github.com/SCPrime/PaiiD
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://paiid-backend.onrender.com
    description: Production server
  - url: http://localhost:8001
    description: Local development server

security:
  - BearerAuth: []

tags:
  - name: Health
    description: System health and status checks
  - name: Portfolio
    description: Portfolio positions and account information
  - name: Trading
    description: Order execution and trade management
  - name: Market Data
    description: Real-time market quotes and data
  - name: AI
    description: AI-powered recommendations and analysis
  - name: News
    description: Market news and sentiment analysis

paths:
  /api/health:
    get:
      summary: Health Check
      description: Check if the API server is running and healthy
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
                  services:
                    type: object
                    properties:
                      tradier:
                        type: string
                        example: connected
                      alpaca:
                        type: string
                        example: connected

  /api/account:
    get:
      summary: Get Account Information
      description: Retrieve account balance, buying power, and equity
      tags:
        - Portfolio
      responses:
        '200':
          description: Account information
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountNumber:
                    type: string
                  balance:
                    type: number
                    format: float
                  buyingPower:
                    type: number
                    format: float
                  equity:
                    type: number
                    format: float
                  cash:
                    type: number
                    format: float
        '401':
          description: Unauthorized - Invalid or missing API token
        '500':
          description: Internal server error

  /api/positions:
    get:
      summary: Get Portfolio Positions
      description: Retrieve all open positions with current P&L
      tags:
        - Portfolio
      responses:
        '200':
          description: List of positions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    symbol:
                      type: string
                      example: AAPL
                    qty:
                      type: integer
                      example: 10
                    avgEntryPrice:
                      type: number
                      format: float
                      example: 150.50
                    currentPrice:
                      type: number
                      format: float
                      example: 152.30
                    marketValue:
                      type: number
                      format: float
                      example: 1523.00
                    costBasis:
                      type: number
                      format: float
                      example: 1505.00
                    unrealizedPL:
                      type: number
                      format: float
                      example: 18.00
                    unrealizedPLPercent:
                      type: number
                      format: float
                      example: 1.20
                    side:
                      type: string
                      enum: [long, short]
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/orders:
    post:
      summary: Execute Trade Order
      description: Submit a new order for execution (paper trading only)
      tags:
        - Trading
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - symbol
                - qty
                - side
                - type
              properties:
                symbol:
                  type: string
                  description: Stock ticker symbol
                  example: AAPL
                qty:
                  type: integer
                  description: Number of shares
                  example: 10
                side:
                  type: string
                  enum: [buy, sell]
                  description: Order side
                  example: buy
                type:
                  type: string
                  enum: [market, limit, stop, stop_limit]
                  description: Order type
                  example: market
                limitPrice:
                  type: number
                  format: float
                  description: Limit price (required for limit orders)
                  example: 150.00
                stopPrice:
                  type: number
                  format: float
                  description: Stop price (required for stop orders)
                  example: 145.00
                timeInForce:
                  type: string
                  enum: [day, gtc, ioc, fok]
                  description: Time in force
                  default: day
                  example: day
      responses:
        '200':
          description: Order submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: string
                  status:
                    type: string
                    enum: [pending, filled, rejected]
                  symbol:
                    type: string
                  qty:
                    type: integer
                  side:
                    type: string
                  type:
                    type: string
                  submittedAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid order parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

    get:
      summary: Get Order History
      description: Retrieve list of submitted orders
      tags:
        - Trading
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [open, closed, all]
          description: Filter by order status
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
          description: Maximum number of orders to return
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    orderId:
                      type: string
                    symbol:
                      type: string
                    qty:
                      type: integer
                    side:
                      type: string
                    type:
                      type: string
                    status:
                      type: string
                    submittedAt:
                      type: string
                      format: date-time
                    filledAt:
                      type: string
                      format: date-time
        '401':
          description: Unauthorized

  /api/market/quote:
    get:
      summary: Get Real-Time Quote
      description: Get current market quote for a symbol (via Tradier API)
      tags:
        - Market Data
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
          description: Stock ticker symbol
          example: AAPL
      responses:
        '200':
          description: Current quote data
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol:
                    type: string
                  last:
                    type: number
                    format: float
                  bid:
                    type: number
                    format: float
                  ask:
                    type: number
                    format: float
                  volume:
                    type: integer
                  change:
                    type: number
                    format: float
                  changePercent:
                    type: number
                    format: float
                  high:
                    type: number
                    format: float
                  low:
                    type: number
                    format: float
                  open:
                    type: number
                    format: float
                  close:
                    type: number
                    format: float
        '400':
          description: Invalid symbol
        '401':
          description: Unauthorized

  /api/market/indices:
    get:
      summary: Get Market Indices
      description: Get current values for major market indices (SPY, QQQ, DIA)
      tags:
        - Market Data
      responses:
        '200':
          description: Market indices data
          content:
            application/json:
              schema:
                type: object
                properties:
                  SPY:
                    type: object
                    properties:
                      price:
                        type: number
                        format: float
                      change:
                        type: number
                        format: float
                      changePercent:
                        type: number
                        format: float
                  QQQ:
                    type: object
                    properties:
                      price:
                        type: number
                        format: float
                      change:
                        type: number
                        format: float
                      changePercent:
                        type: number
                        format: float
                  DIA:
                    type: object
                    properties:
                      price:
                        type: number
                        format: float
                      change:
                        type: number
                        format: float
                      changePercent:
                        type: number
                        format: float
        '401':
          description: Unauthorized

  /api/market/bars:
    get:
      summary: Get Historical Price Bars
      description: Get OHLCV historical data for a symbol
      tags:
        - Market Data
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
          description: Stock ticker symbol
        - name: interval
          in: query
          schema:
            type: string
            enum: [1min, 5min, 15min, 1hour, 1day]
            default: 1day
          description: Bar interval
        - name: start
          in: query
          schema:
            type: string
            format: date
          description: Start date (YYYY-MM-DD)
        - name: end
          in: query
          schema:
            type: string
            format: date
          description: End date (YYYY-MM-DD)
      responses:
        '200':
          description: Historical bar data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
                    open:
                      type: number
                      format: float
                    high:
                      type: number
                      format: float
                    low:
                      type: number
                      format: float
                    close:
                      type: number
                      format: float
                    volume:
                      type: integer

  /api/ai/recommendations:
    get:
      summary: Get AI Trade Recommendations
      description: Get AI-generated trade recommendations based on market analysis
      tags:
        - AI
      parameters:
        - name: symbols
          in: query
          schema:
            type: string
          description: Comma-separated list of symbols to analyze
          example: AAPL,MSFT,GOOGL
        - name: strategy
          in: query
          schema:
            type: string
            enum: [momentum, mean_reversion, trend_following]
          description: Trading strategy to apply
      responses:
        '200':
          description: AI recommendations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    symbol:
                      type: string
                    action:
                      type: string
                      enum: [buy, sell, hold]
                    confidence:
                      type: number
                      format: float
                      minimum: 0
                      maximum: 1
                    reasoning:
                      type: string
                    targetPrice:
                      type: number
                      format: float
                    stopLoss:
                      type: number
                      format: float
        '401':
          description: Unauthorized

  /api/claude/chat:
    post:
      summary: Chat with Claude AI
      description: Send a message to Claude AI and get a response
      tags:
        - AI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - messages
              properties:
                messages:
                  type: array
                  items:
                    type: object
                    properties:
                      role:
                        type: string
                        enum: [user, assistant]
                      content:
                        type: string
                system:
                  type: string
                  description: System prompt
                max_tokens:
                  type: integer
                  default: 2000
                model:
                  type: string
                  default: claude-sonnet-4-5-20250929
      responses:
        '200':
          description: AI response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
                  model:
                    type: string
                  role:
                    type: string

  /api/news:
    get:
      summary: Get Market News
      description: Get latest market news articles
      tags:
        - News
      parameters:
        - name: symbols
          in: query
          schema:
            type: string
          description: Filter news by symbols (comma-separated)
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
          description: Number of articles to return
      responses:
        '200':
          description: News articles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    headline:
                      type: string
                    summary:
                      type: string
                    source:
                      type: string
                    url:
                      type: string
                    publishedAt:
                      type: string
                      format: date-time
                    symbols:
                      type: array
                      items:
                        type: string
                    sentiment:
                      type: string
                      enum: [positive, negative, neutral]

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: |
        API token authentication. 
        
        **How to get a token:**
        1. Set API_TOKEN in backend .env file
        2. Use that token in Authorization header: `Bearer <token>`
        
        **Example:**
        ```
        Authorization: Bearer rnd_bDRqi1TvLvd3rC78yvUSgDraH2Kl
        ```

  schemas:
    Error:
      type: object
      properties:
        detail:
          type: string
          description: Error message
        status_code:
          type: integer
          description: HTTP status code
