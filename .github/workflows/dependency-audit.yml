name: Dependency Security Audit

on:
  # Run weekly on Sundays at midnight UTC
  schedule:
    - cron: '0 0 * * 0'

  # Run on PRs that modify dependency files
  pull_request:
    paths:
      - 'backend/requirements.txt'
      - 'backend/setup.py'
      - 'frontend/package.json'
      - 'frontend/package-lock.json'

  # Allow manual trigger
  workflow_dispatch:

jobs:
  audit-backend:
    name: Backend Dependency Audit (Python)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install pip-audit
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit

      - name: Run pip-audit
        id: pip_audit
        continue-on-error: true
        run: |
          cd backend
          pip-audit --format json --output audit-report.json
          echo "audit_exit_code=$?" >> $GITHUB_OUTPUT

      - name: Parse audit results
        if: always()
        id: parse_results
        run: |
          if [ -f backend/audit-report.json ]; then
            # Extract vulnerability counts
            CRITICAL=$(jq '[.dependencies[].vulns[] | select(.fix_versions | length > 0)] | length' backend/audit-report.json || echo "0")
            TOTAL=$(jq '[.dependencies[].vulns[]] | length' backend/audit-report.json || echo "0")

            echo "critical_count=$CRITICAL" >> $GITHUB_OUTPUT
            echo "total_count=$TOTAL" >> $GITHUB_OUTPUT

            # Create summary
            echo "### Backend Security Audit Results" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- **Total Vulnerabilities:** $TOTAL" >> $GITHUB_STEP_SUMMARY
            echo "- **Fixable Vulnerabilities:** $CRITICAL" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            # List vulnerabilities if any found
            if [ "$TOTAL" -gt 0 ]; then
              echo "#### Vulnerabilities Found:" >> $GITHUB_STEP_SUMMARY
              jq -r '.dependencies[] | select(.vulns | length > 0) | "- **\(.name)** (\(.version)): \(.vulns | length) vulnerabilities"' backend/audit-report.json >> $GITHUB_STEP_SUMMARY
            else
              echo "‚úÖ No vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "critical_count=0" >> $GITHUB_OUTPUT
            echo "total_count=0" >> $GITHUB_OUTPUT
          fi

      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-security-audit
          path: backend/audit-report.json
          retention-days: 90

      - name: Fail on critical vulnerabilities
        if: steps.parse_results.outputs.critical_count > 0
        run: |
          echo "::error::Found ${{ steps.parse_results.outputs.critical_count }} fixable vulnerabilities in backend dependencies"
          echo "Please review the audit report and upgrade affected packages."
          exit 1

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request' && steps.parse_results.outputs.total_count > 0
        uses: actions/github-script@v7
        with:
          script: |
            const criticalCount = ${{ steps.parse_results.outputs.critical_count }};
            const totalCount = ${{ steps.parse_results.outputs.total_count }};

            const message = `## üîí Backend Security Audit

            **Total Vulnerabilities:** ${totalCount}
            **Fixable Vulnerabilities:** ${criticalCount}

            ${criticalCount > 0 ? '‚ö†Ô∏è **Action Required:** This PR introduces dependencies with known vulnerabilities. Please review and fix before merging.' : ''}

            Download the full audit report from the workflow artifacts.
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

  audit-frontend:
    name: Frontend Dependency Audit (npm)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run npm audit
        id: npm_audit
        continue-on-error: true
        run: |
          cd frontend
          npm audit --json > audit-report.json
          echo "audit_exit_code=$?" >> $GITHUB_OUTPUT

      - name: Parse audit results
        if: always()
        id: parse_results
        run: |
          if [ -f frontend/audit-report.json ]; then
            # Extract vulnerability counts
            CRITICAL=$(jq '.metadata.vulnerabilities.critical // 0' frontend/audit-report.json)
            HIGH=$(jq '.metadata.vulnerabilities.high // 0' frontend/audit-report.json)
            MODERATE=$(jq '.metadata.vulnerabilities.moderate // 0' frontend/audit-report.json)
            LOW=$(jq '.metadata.vulnerabilities.low // 0' frontend/audit-report.json)
            TOTAL=$(jq '.metadata.vulnerabilities.total // 0' frontend/audit-report.json)

            echo "critical_count=$CRITICAL" >> $GITHUB_OUTPUT
            echo "high_count=$HIGH" >> $GITHUB_OUTPUT
            echo "moderate_count=$MODERATE" >> $GITHUB_OUTPUT
            echo "low_count=$LOW" >> $GITHUB_OUTPUT
            echo "total_count=$TOTAL" >> $GITHUB_OUTPUT

            # Create summary
            echo "### Frontend Security Audit Results" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- **Total Vulnerabilities:** $TOTAL" >> $GITHUB_STEP_SUMMARY
            echo "- **Critical:** $CRITICAL" >> $GITHUB_STEP_SUMMARY
            echo "- **High:** $HIGH" >> $GITHUB_STEP_SUMMARY
            echo "- **Moderate:** $MODERATE" >> $GITHUB_STEP_SUMMARY
            echo "- **Low:** $LOW" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            if [ "$TOTAL" -gt 0 ]; then
              echo "#### Fixable Vulnerabilities:" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              npm audit --fix-type=patch
              echo '```' >> $GITHUB_STEP_SUMMARY
            else
              echo "‚úÖ No vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "critical_count=0" >> $GITHUB_OUTPUT
            echo "high_count=0" >> $GITHUB_OUTPUT
            echo "moderate_count=0" >> $GITHUB_OUTPUT
            echo "low_count=0" >> $GITHUB_OUTPUT
            echo "total_count=0" >> $GITHUB_OUTPUT
          fi

      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-security-audit
          path: frontend/audit-report.json
          retention-days: 90

      - name: Fail on critical/high vulnerabilities
        if: steps.parse_results.outputs.critical_count > 0 || steps.parse_results.outputs.high_count > 0
        run: |
          echo "::error::Found critical or high severity vulnerabilities in frontend dependencies"
          echo "Critical: ${{ steps.parse_results.outputs.critical_count }}"
          echo "High: ${{ steps.parse_results.outputs.high_count }}"
          echo "Please run 'npm audit fix' to resolve these issues."
          exit 1

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request' && steps.parse_results.outputs.total_count > 0
        uses: actions/github-script@v7
        with:
          script: |
            const critical = ${{ steps.parse_results.outputs.critical_count }};
            const high = ${{ steps.parse_results.outputs.high_count }};
            const moderate = ${{ steps.parse_results.outputs.moderate_count }};
            const low = ${{ steps.parse_results.outputs.low_count }};
            const total = ${{ steps.parse_results.outputs.total_count }};

            const severity = critical > 0 ? 'üî¥ Critical' : high > 0 ? 'üü† High' : moderate > 0 ? 'üü° Moderate' : 'üü¢ Low';

            const message = `## üîí Frontend Security Audit

            **Severity:** ${severity}

            | Severity | Count |
            |----------|-------|
            | Critical | ${critical} |
            | High | ${high} |
            | Moderate | ${moderate} |
            | Low | ${low} |
            | **Total** | **${total}** |

            ${critical > 0 || high > 0 ? '‚ö†Ô∏è **Action Required:** This PR introduces dependencies with critical or high severity vulnerabilities. Please run `npm audit fix` and re-push.' : ''}

            Download the full audit report from the workflow artifacts.
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

  generate-sbom:
    name: Generate Software Bill of Materials (SBOM)
    runs-on: ubuntu-latest
    needs: [audit-backend, audit-frontend]
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install cyclonedx-bom
        run: |
          pip install cyclonedx-bom

      - name: Generate Python SBOM
        run: |
          cd backend
          cyclonedx-py -r -o sbom-backend.json

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Generate npm SBOM
        run: |
          cd frontend
          npx @cyclonedx/cyclonedx-npm --output-file sbom-frontend.json

      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: software-bill-of-materials
          path: |
            backend/sbom-backend.json
            frontend/sbom-frontend.json
          retention-days: 365

  security-summary:
    name: Security Audit Summary
    runs-on: ubuntu-latest
    needs: [audit-backend, audit-frontend]
    if: always()

    steps:
      - name: Download all audit reports
        uses: actions/download-artifact@v4

      - name: Create security summary
        run: |
          echo "# üîí Security Audit Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow:** ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "## Audit Reports" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- [Backend Audit Report](backend-security-audit/audit-report.json)" >> $GITHUB_STEP_SUMMARY
          echo "- [Frontend Audit Report](frontend-security-audit/audit-report.json)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "1. Review audit reports in workflow artifacts" >> $GITHUB_STEP_SUMMARY
          echo "2. Prioritize critical and high severity vulnerabilities" >> $GITHUB_STEP_SUMMARY
          echo "3. Update dependencies using \`pip install --upgrade\` or \`npm update\`" >> $GITHUB_STEP_SUMMARY
          echo "4. Test updated dependencies thoroughly before deploying" >> $GITHUB_STEP_SUMMARY
          echo "5. Document any accepted risks in SECURITY_AUDIT_REPORT.md" >> $GITHUB_STEP_SUMMARY

      - name: Notify on failure
        if: failure()
        run: |
          echo "::error::Security audit found critical vulnerabilities. Please review and fix before merging."
